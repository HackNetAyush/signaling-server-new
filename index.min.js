const express=require("express"),http=require("http"),socketIO=require("socket.io"),cors=require("cors"),app=express(),corsOptions={origin:process.env.CORS_URLS||["https://28dbc6cc-7430-48dd-9913-90c3edb98fea-00-28l8kzbxvcs6z.pike.replit.dev","http://localhost:5501","*","http://127.0.0.1:5501","http://192.168.1.10:5501"],methods:"GET,HEAD,PUT,PATCH,POST,DELETE",credentials:!0,optionsSuccessStatus:204};app.use(cors(corsOptions));const server=http.createServer(app),io=socketIO(server,{cors:{origin:process.env.CORS_URLS||["https://28dbc6cc-7430-48dd-9913-90c3edb98fea-00-28l8kzbxvcs6z.pike.replit.dev","http://localhost:5501","*","http://127.0.0.1:5501","http://192.168.1.10:5501"],methods:["GET","POST"],credentials:!0}});function remove(o,e){let s=o.indexOf(e);-1!==s?o.splice(s,1):console.log(`Element ${e} not found in the array.`)}function debugLog(o){console.log("\x1b[31m%s\x1b[0m",`[DEBUG] ${o}`)}const socketRooms={},allRooms=[],availableRoomsToJoin=[],fullRooms=[];function getTotalUserCount(){var o=fullRooms.length,e=availableRoomsToJoin.length;debugLog("Total users: "+(e+2*o)+"\nAvailableRoomsToJoin: "+e+"\nFull Rooms: "+o)}io.on("connection",o=>{o.on("checkAvailableRooms",()=>{o.emit("availableRooms",availableRoomsToJoin)}),o.on("joinRoom",e=>{allRooms.includes(e)?(getTotalUserCount(),fullRooms.includes(e)?io.to(o.id).emit("roomFull",e):availableRoomsToJoin.includes(e)&&(remove(availableRoomsToJoin,e),fullRooms.push(e),o.join(e),o.to(e).emit("userJoined",o.id),io.to(e).emit("lastConnected"),socketRooms[o.id]=socketRooms[o.id]||new Set,socketRooms[o.id].add(e),o.on("messageFromClient",s=>{o.to(e).emit("message",[o.id,s])}),o.on("sendSDP",(e,s)=>{console.log("Recieved SDP"),o.to(e).emit("receivedSDP",{from:o.id,sdp:s})}),o.on("sendICE",(e,s)=>{console.log("Recieved ICE"),o.to(e).emit("receivedICE",{from:o.id,iceCandidate:s})}))):(allRooms.push(e),availableRoomsToJoin.push(e),getTotalUserCount(),o.join(e),o.to(e).emit("userJoined",o.id),socketRooms[o.id]=socketRooms[o.id]||new Set,socketRooms[o.id].add(e),o.on("messageFromClient",s=>{o.to(e).emit("message",[o.id,s])})),o.on("disconnect",async()=>{let e=socketRooms[o.id]||new Set;e.forEach(e=>{io.to(e).emit("userDisconnected",o.id),fullRooms.includes(e)?(remove(fullRooms,e),availableRoomsToJoin.push(e)):availableRoomsToJoin.includes(e)&&(remove(availableRoomsToJoin,e),remove(allRooms,e))}),delete socketRooms[o.id]})}),o.on("lastUserConnected",e=>{o.to(e).emit("startSharingSDPandICE")})}),app.get("/",(o,e)=>{e.send(`<pre>Server is UP and Running ðŸš€<br>Made by HackNetAyush</pre>`)});const PORT=process.env.PORT||3e3;server.listen(PORT,()=>{console.log(`Server is running on http://localhost:${PORT}`)});